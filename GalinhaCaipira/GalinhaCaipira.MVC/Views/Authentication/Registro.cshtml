@model GalinhaCaipira.MVC.ViewModels.RegistroViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Galinha Caipira - Registro</title>
    <link href="~/Content/login-register-lock.css" rel="stylesheet" />
    <link href="~/Content/style.min.css" rel="stylesheet" />
    <link href="~/Content/site.css" rel="stylesheet" />
    <link href="~/Content/font-awesome.css" rel="stylesheet" />

    <script src="~/Scripts/jquery-1.9.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    
    <link href="@Url.Content("//cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@3/dark.css")" rel="stylesheet">

    <script src="//cdn.jsdelivr.net/npm/sweetalert2@9/dist/sweetalert2.min.js"></script>
</head>
<body class="skin-default card-no-border">
    <section id="wrapper">
        <div class="login-register">
            <div class="login-box card">
                <div class="card-body">
                    @*@using (Html.BeginForm("Registro", "Authentication", FormMethod.Post, new { @class = "form-horizontal form-material needs-validation", novalidate="novalidate"}))
                        {*@
                    <form id="registro" action="@Url.Action("Registro")" method="post" class="form-horizontal form-material">
                        @Html.AntiForgeryToken()
                        <h3 class="text-center m-b-20">Registre-se</h3>
                        <div class="form-group">
                            <div class="col-xs-12">
                                @Html.TextBoxFor(t => t.Nome, new { placeholder = "Nome", @class = "form-control", maxlength = "150" })
                                @Html.ValidationMessageFor(v => v.Nome)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-12">
                                @Html.TextBoxFor(t => t.Sobrenome, new { placeholder = "Sobrenome", @class = "form-control", maxlength="150" })
                                @Html.ValidationMessageFor(v => v.Sobrenome)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-12">
                                @Html.TextBoxFor(t => t.NomeGranja, new { placeholder = "Nome da Granja", @class = "form-control", maxlength="300" })
                                @Html.ValidationMessageFor(v => v.NomeGranja)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-12">
                                @Html.TextBoxFor(t => t.Email, new { placeholder = "Email", @class = "form-control", maxlength="150" })
                                @Html.ValidationMessageFor(v => v.Email)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-12">
                                @Html.PasswordFor(p => p.Senha, new { placeholder = "Senha", @class = "form-control", maxlength="150" })
                                @Html.ValidationMessageFor(v => v.Senha)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-12">
                                @Html.PasswordFor(p => p.ConfirmarSenha, new { placeholder = "Confirmar Senha", @class = "form-control", maxlength="150" })
                                @Html.ValidationMessageFor(v => v.ConfirmarSenha)
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-12">
                                <div class="custom-control custom-checkbox">
                                    @Html.CheckBoxFor(c => c.TermosAceitos, new { @class = "custom-control-input" })
                                    <label class="custom-control-label" for="TermosAceitos"> Aceita todos <a href="#">termos</a>? </label>
                                </div>
                                @Html.ValidationMessageFor(v => v.TermosAceitos)
                            </div>
                        </div>
                        <div class="form-group text-center p-b-20">
                            <div class="col-xs-12">
                                <button class="btn btn-info btn-lg btn-block btn-rounded text-uppercase waves-effect waves-light" type="submit">Registrar</button>
                            </div>
                        </div>
                        <div class="form-group m-b-0">
                            <div class="col-sm-12 text-center">
                                Já possui uma conta? <a href="pages-login.html" class="text-info m-l-5"><b>Login</b></a>
                            </div>
                        </div>
                    </form>
                    @*}*@
                </div>
            </div>
        </div>
    </section>

    <script>
        // extend jquery range validator to work for required checkboxes
        var defaultRangeValidator = $.validator.methods.range;

        $.validator.methods.range = function (value, element, param) {
            if (element.type === 'checkbox') {
                // if it's a checkbox return true if it is checked
                return element.checked;
            } else {
                // otherwise run the default validation function
                return defaultRangeValidator.call(this, value, element, param);
            }
        }
    </script>
    </body>
</html>
